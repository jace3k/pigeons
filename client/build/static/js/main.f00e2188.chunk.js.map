{"version":3,"sources":["img/background.jpg","constants.js","components/ButtonLink.js","utils/setAuthToken.js","actions/authActions.js","components/Navbar.js","components/ListCard.js","components/Main.js","components/Footer.js","components/Auction.js","components/AddAuction.js","components/LastAuctions.js","components/Archive.js","components/Login.js","components/Register.js","App.js","serviceWorker.js","utils/isEmpty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","TITLE","LOGIN_ELEMENT","react_default","a","createElement","style","textAlign","width","color","PRIMARY_COLOR","primary","SECONDARY_COLOR","secondary","ButtonLink","props","button","Button_default","variant","size","children","active","onClick","Link","to","textDecoration","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","state","anchorEl","currentTab","handleProfile","event","_this","setState","currentTarget","handleMenuClose","handleLogout","enqueueSnackbar","activate","tab","_this2","this","_this$state","isMenuOpen","Boolean","_this$props$auth","auth","isAuthenticated","renderMenu","user","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","authLeftSide","IconButton_default","Badge_default","badgeContent","Star_default","AccountCircle_default","guestLeftSide","Toolbar_default","components_ButtonLink","AppBar_default","position","Typography_default","marginRight","flexGrow","Component","connect","withSnackbar","ListCard","Card_default","maxWidth","CardActionArea_default","CardMedia_default","height","image","img","title","CardContent_default","gutterBottom","component","CardActions_default","Main","gridItemStyle","padding","Grid_default","container","spacing","marginTop","item","xs","components_ListCard","Footer","styles","backgroundColor","boxShadow","Date","getFullYear","Auction","match","params","id","AddAuction","LastAuctions","Archive","Login","email","password","errors","handleChange","name","Object","defineProperty","target","value","onSubmit","e","preventDefault","loginUser","nextProps","nextContext","Redirect","className","noValidate","autoComplete","Avatar_default","margin","Lock_default","marginBottom","TextField_default","label","onChange","helperText","error","Divider_default","userData","post","then","res","console","log","data","setItem","jwt_decode","catch","err","response","Register","password2","registerUser","registerSuccess","theme","createMuiTheme","palette","typography","useNextVariants","App","BrowserRouter","core_styles","Switch","exact","from","Route","path","flex","CssBaseline_default","window","location","hostname","isEmpty","undefined","keys","length","trim","initialState","combineReducers","arguments","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","jwtToken","exp","now","href","app","es","build","maxSnack","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gcCQ3BC,EAAQ,wBACRC,EAAiBC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,UAAW,SAAUC,MAAO,OAAQC,MAAO,SAAxD,QAAyER,EAAzE,KAEjBS,EAAgBC,IAAQ,KACxBC,EAAkBC,IAAU,+BCe1BC,MAvBf,SAAoBC,GAChB,IAAIC,EACAb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQK,MAAM,YAAYS,QAAQ,YAAYC,KAAK,SAC9CJ,EAAMK,UAWf,OAPKL,EAAMM,SACPL,EACIb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQK,MAAM,UAAUU,KAAK,QAAQG,QAASP,EAAMO,SAC/CP,EAAMK,WAKfjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIT,EAAMS,GAAIlB,MAAO,CAACmB,eAAgB,OAAQhB,MAAO,YACtDO,8BCnBFU,EAAA,SAAAC,GACPA,EACAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,gCCsCFC,EAAiB,SAAAC,GAC1B,MAAO,CACHC,KHxCwB,mBGyCxBC,QAASF,IAIJG,EAAa,kBAAM,SAAAC,GAC5BC,aAAaC,WAAW,YACxBb,GAAa,GACbW,EAASL,EAAe,eCpCtBQ,6MACFC,MAAQ,CACJC,SAAU,KACVC,WAAY,UAGhBC,cAAgB,SAAAC,GACZC,EAAKC,SAAS,CAACL,SAAUG,EAAMG,mBAGnCC,gBAAkB,WACdH,EAAKC,SAAS,CAACL,SAAU,UAG7BQ,aAAe,WACXJ,EAAKC,SAAS,CAACL,SAAU,OACzBI,EAAK/B,MAAMqB,aACXU,EAAK/B,MAAMoC,gBAAgB,iCAAwB,CAACjC,QAAS,eAKjEkC,SAAW,SAACC,GACRP,EAAKC,SAAS,CAACJ,WAAYU,6EAGtB,IAAAC,EAAAC,KAAAC,EAC0BD,KAAKd,MAA7BC,EADFc,EACEd,SAAUC,EADZa,EACYb,WACXc,EAAaC,QAAQhB,GAFtBiB,EAG2BJ,KAAKxC,MAAM6C,KAApCC,EAHFF,EAGEE,gBACDC,GAJDH,EAGmBI,KAEpB5D,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACIsC,SAAUA,EACVuB,aAAc,CAACC,SAAU,MAAOC,WAAY,SAC5CC,gBAAiB,CAACF,SAAU,MAAOC,WAAY,SAC/CE,KAAMZ,EACNa,QAASf,KAAKN,iBAEd9C,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAUkB,QAASiC,KAAKN,iBAAxB,UACA9C,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAUkB,QAASiC,KAAKL,cAAxB,aAIFsB,EACFrE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAYK,MAAM,WACdN,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,CAAOuE,aAAc,EAAGlE,MAAM,aAC1BN,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,QAGRD,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAYK,MAAM,UAAUa,QAASiC,KAAKX,eACtCzC,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,CAAOuE,aAAc,EAAGlE,MAAM,aAC1BN,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,SAKV0E,EACF3E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,KACID,EAAAC,EAAAC,cAAC2E,EAAD,CACIxD,GAAI,SACJH,QAAM,EACNC,QAAS,kBAAM,OAHnB,WAOAnB,EAAAC,EAAAC,cAAC2E,EAAD,CACIxD,GAAI,YACJH,QAAQ,EACRC,QAAS,kBAAM,OAHnB,8BAWZ,OACInB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CAAQ8E,SAAS,SAASzE,MAAM,WAC5BN,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,KACID,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAYc,QAAQ,KAAKT,MAAM,UAAUH,MAAO,CAAC8E,YAAa,QACzDnF,GAELE,EAAAC,EAAAC,cAAC2E,EAAD,CACIxD,GAAI,OACJH,OAAuB,SAAfsB,EACRrB,QAAS,kBAAMgC,EAAKF,SAAS,UAHjC,UAQCS,GACD1D,EAAAC,EAAAC,cAAC2E,EAAD,CACIxD,GAAI,WACJH,OAAuB,QAAfsB,EACRrB,QAAS,kBAAMgC,EAAKF,SAAS,SAHjC,2BAUAjD,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAC+E,SAAU,OACtBxB,EAAkBW,EAAeM,IAGzChB,UA5GIwB,aAsHNC,cAJS,SAAA9C,GAAK,MAAK,CAC9BmB,KAAMnB,EAAMmB,OAGwB,CAACxB,cAA1BmD,CAAuCC,uBAAahD,iJC5FpDiD,oLA/BP,OACQtF,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAAME,MAAO,CAACqF,SAAU,QACpBxF,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,KACID,EAAAC,EAAAC,cAACwF,GAAAzF,EAAD,CAAWE,MAAO,CAACwF,OAAQ,KAEvBC,MAAOC,KACPC,MAAM,0BAEV9F,EAAAC,EAAAC,cAAC6F,GAAA9F,EAAD,KACID,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAY+F,cAAY,EAACjF,QAAQ,KAAKkF,UAAU,MAAhD,UAGAjG,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAYgG,UAAU,KAAtB,mIAMRjG,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQe,KAAK,QAAQV,MAAM,WAA3B,SAGAN,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQe,KAAK,QAAQV,MAAM,WAA3B,uBAxBD6E,aC0BRgB,oLA9BP,IAAMC,EAAgB,CAClBC,QAAS,OAGb,OACIrG,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAC+E,SAAU,MACnBlF,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMsG,WAAS,EAACC,QAAS,EAAGrG,MAAO,CAACsG,UAAW,QAC3CzG,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,EAAGxG,MAAOiG,GACrBpG,EAAAC,EAAAC,cAAC0G,GAAD,OAGJ5G,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,EAAGxG,MAAOiG,GACrBpG,EAAAC,EAAAC,cAAC0G,GAAD,OAGJ5G,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,EAAGxG,MAAOiG,GACrBpG,EAAAC,EAAAC,cAAC0G,GAAD,OAGJ5G,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,EAAGxG,MAAOiG,GACrBpG,EAAAC,EAAAC,cAAC0G,GAAD,gBAtBLzB,kCCiBJ0B,oLAjBP,IAAMC,EAAS,CACXnB,OAAQ,MACRoB,gBAAiBxG,EACjBD,MAAO,QACP+F,QAAS,MACTW,UAAW,0BAIf,OACIhH,EAAAC,EAAAC,cAAA,OAAKC,MAAO2G,GAAZ,SACa,IAAIG,MAAQC,cADzB,IACyCpH,EADzC,YAZSqF,8DCSNgC,oLARP,OACInH,EAAAC,EAAAC,cAAA,yBACgB,IADhB,IACsBkD,KAAKxC,MAAMwG,MAAMC,OAAOC,WAJpCnC,aCUPoC,oLARP,OACIvH,EAAAC,EAAAC,cAAA,qCAHaiF,aCUVqC,oLARP,OACIxH,EAAAC,EAAAC,cAAA,4CAHeiF,aCUZsC,oLARP,OACIzH,EAAAC,EAAAC,cAAA,kCAHUiF,sGCsBhBuC,8MACFpF,MAAQ,CACJqF,MAAO,GACPC,SAAU,GACVC,OAAQ,MAGZC,aAAe,SAAAC,GAAI,OAAI,SAAArF,GACnBC,EAAKC,SAALoF,OAAAC,GAAA,EAAAD,CAAA,GACKD,EAAOrF,EAAMwF,OAAOC,YAI7BC,SAAW,SAACC,GACRA,EAAEC,iBAEF,IAAM1E,EAAO,CACT+D,MAAOhF,EAAKL,MAAMqF,MAClBC,SAAUjF,EAAKL,MAAMsF,UAKzBjF,EAAK/B,MAAM2H,UAAU3E,6FAGC4E,EAAWC,GAC7BD,EAAUX,QACVzE,KAAKR,SAAS,CAACiF,OAAQW,EAAUX,0CAIhC,IACEA,EAAUzE,KAAKd,MAAfuF,OACCnE,EAAoBN,KAAKxC,MAAM6C,KAA/BC,gBAKR,OAHIA,GACAN,KAAKxC,MAAMoC,gBAAgB,6BAAyB,CAAEjC,QAAS,YAG/Df,EAAAC,EAAAC,cAAA,WACKwD,GAAmB1D,EAAAC,EAAAC,cAACwI,GAAA,EAAD,CAAUrH,GAAI,MAClCrB,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAAM0I,UAAW,QACb3I,EAAAC,EAAAC,cAAA,QAAM0I,YAAU,EAACC,aAAa,MAAMT,SAAUhF,KAAKgF,UAC/CpI,EAAAC,EAAAC,cAAC6F,GAAA9F,EAAD,CAAa0I,UAAW,gBACpB3I,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,CACIE,MAAO,CACHE,MAAO,GACPsF,OAAQ,GACRoD,OAAQ,SACRhC,gBAAiBtG,IAErBT,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,OAEJD,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CACIc,QAAQ,KACRkF,UAAU,KACV9F,MAAO,CACHsG,UAAW,QACXwC,aAAc,UAEjB,aAELjJ,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMsG,WAAS,EAACC,QAAS,IACrBxG,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,IACX3G,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CACIqH,GAAI,QACJ6B,MAAO,SACPpB,KAAM,QACNqB,SAAUhG,KAAK0E,aAAa,SAC5Ba,UAAW,YACXR,MAAO/E,KAAKd,MAAMqF,MAClB0B,WAAYxB,EAAOF,OAASE,EAAOF,MACnC2B,MAAOzB,EAAOF,QAAS,KAI/B3H,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,IACX3G,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CACIqH,GAAI,WACJ6B,MAAO,aACPpB,KAAM,WACNqB,SAAUhG,KAAK0E,aAAa,YAC5B/F,KAAK,WACL4G,UAAW,YACXR,MAAO/E,KAAKd,MAAMsF,SAClByB,WAAYxB,EAAOD,UAAYC,EAAOD,SACtC0B,MAAOzB,EAAOD,WAAY,OAK1C5H,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACI8B,KAAM,SACNhB,QAAS,YACTT,MAAO,UACPqI,UAAW,aAEV,WAEL3I,EAAAC,EAAAC,cAAC2E,EAAD,CACIxD,GAAI,QADR,mBAQXtB,UA9GGoF,aAyHLC,eALS,SAAA9C,GAAK,MAAK,CAC9BmB,KAAMnB,EAAMmB,KACZoE,OAAQvF,EAAMuF,SAGsB,CAACU,UT1HhB,SAAAiB,GAAQ,OAAI,SAAAtH,GACjCT,IACKgI,KAAK,mBAAoBD,GACzBE,KAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,MADP,IAGDtI,EAAUmI,EAAIG,KAAdtI,MACRW,aAAa4H,QAAQ,WAAYvI,GACjCD,EAAaC,GACb,IAAMM,EAAUkI,IAAWxI,GAC3BU,EAASL,EAAeC,MAG3BmI,MAAM,SAAAC,GACHhI,EAAS,CACLH,KHlCU,aGmCVC,QAASkI,EAAIC,SAASL,YS0GvB1E,CAAsCC,uBAAaqC,KCrH5D0C,8MACF9H,MAAQ,CACJyF,KAAM,GACNJ,MAAO,GACPC,SAAU,GACVyC,UAAW,GACXxC,OAAQ,MAGZC,aAAe,SAAAC,GAAI,OAAI,SAAArF,GACnBC,EAAKC,SAALoF,OAAAC,GAAA,EAAAD,CAAA,GACKD,EAAOrF,EAAMwF,OAAOC,YAI7BC,SAAW,SAACC,GACRA,EAAEC,iBAEF,IAAM1E,EAAO,CACTmE,KAAMpF,EAAKL,MAAMyF,KACjBJ,MAAOhF,EAAKL,MAAMqF,MAClBC,SAAUjF,EAAKL,MAAMsF,SACrByC,UAAW1H,EAAKL,MAAM+H,WAM1B1H,EAAK/B,MAAM0J,aAAa1G,6FAKF4E,EAAWC,GAC7BD,EAAUX,QACVzE,KAAKR,SAAS,CAACiF,OAAQW,EAAUX,SAEjCW,EAAU/E,MACN+E,EAAU/E,KAAK8G,iBACfnH,KAAKR,SAAS,CAAC2H,iBAAiB,qCAKnC,IAAAlH,EAC6BD,KAAKd,MAAhCuF,EADFxE,EACEwE,OAAQ0C,EADVlH,EACUkH,gBACR7G,EAAmBN,KAAKxC,MAAM6C,KAA9BC,gBAMP,OALI6G,EACAnH,KAAKxC,MAAMoC,gBAAgB,6EAA0D,CAACjC,QAAS,YACxF2C,GACPN,KAAKxC,MAAMoC,gBAAgB,uBAAmB,CAACjC,QAAS,UAGxDf,EAAAC,EAAAC,cAAA,WACKqK,GAAmB7G,GAAmB1D,EAAAC,EAAAC,cAACwI,GAAA,EAAD,CAAUrH,GAAI,MACrDrB,EAAAC,EAAAC,cAACqF,GAAAtF,EAAD,CAAM0I,UAAW,QACb3I,EAAAC,EAAAC,cAAA,QAAM0I,YAAU,EAACC,aAAa,MAAMT,SAAUhF,KAAKgF,UAC/CpI,EAAAC,EAAAC,cAAC6F,GAAA9F,EAAD,CAAa0I,UAAW,gBACpB3I,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,CACIE,MAAO,CACHE,MAAO,GACPsF,OAAQ,GACRoD,OAAQ,SACRhC,gBAAiBtG,IAErBT,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,OAEJD,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CACIc,QAAQ,KACRkF,UAAU,KACV9F,MAAO,CACHsG,UAAW,QACXwC,aAAc,UAEjB,eAELjJ,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMsG,WAAS,EAACC,QAAS,IACrBxG,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,IACX3G,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CACIqH,GAAI,OACJ6B,MAAO,yBACPpB,KAAM,OACNqB,SAAUhG,KAAK0E,aAAa,QAC5Ba,UAAW,YACXR,MAAO/E,KAAKd,MAAMyF,KAClBsB,WAAYxB,EAAOE,MAAQF,EAAOE,KAClCuB,MAAOzB,EAAOE,OAAQ,KAI9B/H,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,IACX3G,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CACIqH,GAAI,QACJ6B,MAAO,SACPpB,KAAM,QACNqB,SAAUhG,KAAK0E,aAAa,SAC5Ba,UAAW,YACXR,MAAO/E,KAAKd,MAAMqF,MAClB0B,WAAYxB,EAAOF,OAASE,EAAOF,MACnC2B,MAAOzB,EAAOF,QAAS,KAI/B3H,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,IACX3G,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CACIqH,GAAI,WACJ6B,MAAO,aACPpB,KAAM,WACNqB,SAAUhG,KAAK0E,aAAa,YAC5B/F,KAAK,WACL4G,UAAW,YACXR,MAAO/E,KAAKd,MAAMsF,SAClByB,WAAYxB,EAAOD,UAAYC,EAAOD,SACtC0B,MAAOzB,EAAOD,WAAY,KAGlC5H,EAAAC,EAAAC,cAACoG,GAAArG,EAAD,CAAMyG,MAAI,EAACC,GAAI,IACX3G,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CACIqH,GAAI,YACJ6B,MAAO,wBACPpB,KAAM,YACNqB,SAAUhG,KAAK0E,aAAa,aAC5B/F,KAAK,WACL4G,UAAW,YACXR,MAAO/E,KAAKd,MAAM+H,UAClBhB,WAAYxB,EAAOwC,WAAaxC,EAAOwC,UACvCf,MAAOzB,EAAOwC,YAAa,OAK3CrK,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,MACAD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,KACID,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACI8B,KAAM,SACNhB,QAAS,YACTT,MAAO,UACPqI,UAAW,aAEV,mBAGL3I,EAAAC,EAAAC,cAAC2E,EAAD,CACIxD,GAAI,QADR,mBAUXtB,UAxJMoF,aAmKRC,eALS,SAAA9C,GAAK,MAAK,CAC9BmB,KAAMnB,EAAMmB,KACZoE,OAAQvF,EAAMuF,SAGsB,CAACyC,aV1Lb,SAACd,GAAD,OAAc,SAAAtH,GACtCT,IACKgI,KAAK,sBAAuBD,GAC5BE,KAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,MAChB5H,EAAS,CACLH,KHNgB,mBGOhBC,QAAS,wBAGhBiI,MAAM,SAAAC,GACHhI,EAAS,CACLH,KHbU,aGcVC,QAASkI,EAAIC,SAASL,YU6KvB1E,CAAyCC,uBAAa+E,KC3K/DI,GAAQC,0BAAe,CACzBC,QAAS,CACLlK,QAASA,IACTE,UAAWA,KAEfiK,WAAY,CACRC,iBAAiB,KAsCVC,oLA/BP,OACI7K,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,KACI9K,EAAAC,EAAAC,cAAA,OAAKyI,UAAU,OACX3I,EAAAC,EAAAC,cAAC6K,GAAA,iBAAD,CAAkBP,MAAOA,IACrBxK,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,KACIhL,EAAAC,EAAAC,cAACwI,GAAA,EAAD,CAAUuC,OAAK,EAACC,KAAM,IAAK7J,GAAI,UAEnCrB,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOC,KAAM,QAASnF,UAAW5D,IACjCrC,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAACkL,KAAM,IAChBrL,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOF,OAAK,EAACG,KAAM,OAAQnF,UAAWE,KACtCnG,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOF,OAAK,EAACG,KAAM,WAAYnF,UAAWsB,KAC1CvH,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOF,OAAK,EAACG,KAAM,YAAanF,UAAWuB,KAC3CxH,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOF,OAAK,EAACG,KAAM,eAAgBnF,UAAWwB,KAC9CzH,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOF,OAAK,EAACG,KAAM,mBAAoBnF,UAAWkB,KAElDnH,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOF,OAAK,EAACG,KAAM,YAAanF,UAAWmE,KAC3CpK,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOF,OAAK,EAACG,KAAM,SAAUnF,UAAWyB,MAE5C1H,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAOC,KAAM,OAAQnF,UAAWY,MAGpC7G,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,gBAzBNkF,aClBE5B,QACW,cAA7BgI,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrE,MACvB,2FCZSsE,GANC,SAAAvD,GAAK,YACPwD,IAAVxD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BH,OAAO4D,KAAKzD,GAAO0D,QAC/B,kBAAV1D,GAA8C,IAAxBA,EAAM2D,OAAOD,QCDzCE,GAAe,CACjBrI,iBAAiB,EACjBE,KAAM,ICHJmI,GAAe,GCENC,gBAAgB,CAC3BvI,KFGW,WAAkC,IAAjCnB,EAAiC2J,UAAAJ,OAAA,QAAAF,IAAAM,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAAJ,OAAA,EAAAI,UAAA,QAAAN,EAC7C,OAAQO,EAAOnK,MACX,IjBLwB,mBiBMpB,OAAOiG,OAAAmE,GAAA,EAAAnE,CAAA,GAAI1F,EAAX,CAAkBiI,iBAAiB,IACvC,IjBNwB,mBiBOpB,OAAOvC,OAAAmE,GAAA,EAAAnE,CAAA,GACA1F,EADP,CAEIoB,iBAAkBgI,GAAQQ,EAAOlK,SACjC4B,KAAMsI,EAAOlK,UAErB,QACI,OAAOM,IEbfuF,ODFW,WAAkC,IAAjCvF,EAAiC2J,UAAAJ,OAAA,QAAAF,IAAAM,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAAJ,OAAA,EAAAI,UAAA,QAAAN,EAC7C,OAAQO,EAAOnK,MACX,IlBFkB,akBGd,OAAOmK,EAAOlK,QAClB,QACI,OAAOM,MEHb8J,GAAa,CAACC,MAWLC,GATDC,aACVC,GALiB,GAOjBC,aACIC,KAAeC,WAAf,EAAmBP,IACnBb,OAAOqB,8BAAgCrB,OAAOqB,iCCAtD,GAAIzK,aAAa0K,SAAU,CACvBtL,EAAaY,aAAa0K,UAC1B,IAAM/K,GAAUkI,IAAW7H,aAAa0K,UACxCP,GAAMpK,SAASL,EAAeC,KAE1BA,GAAQgL,IAAO7F,KAAK8F,MAAM,MAC1BT,GAAMpK,SAASD,KACfsJ,OAAOC,SAASwB,KAAO,UAI/B,IAAMC,GACFjN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAUZ,MAAOA,IACbtM,EAAAC,EAAAC,cAACiN,EAAA,iBAAD,CACIC,SAAU,EACVtJ,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAE7ChE,EAAAC,EAAAC,cAACmN,GAAD,QAKZC,IAASC,OAAON,GAAKO,SAASC,eAAe,SN8FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC","file":"static/js/main.f00e2188.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.bc3ebb15.jpg\";","import React from \"react\";\nimport primary from '@material-ui/core/colors/deepPurple';\nimport secondary from '@material-ui/core/colors/orange';\n\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\nexport const TITLE = 'Allegołębie';\nexport const LOGIN_ELEMENT = (<div style={{textAlign: 'center', width: '100%', color: '#AAA'}}>&copy; {TITLE}.</div>);\n\nexport const PRIMARY_COLOR = primary[600];\nexport const SECONDARY_COLOR = secondary[600];","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {Link} from \"react-router-dom\";\n\nfunction ButtonLink(props) {\n    let button = (\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\">\n            {props.children}\n        </Button>\n    );\n\n    if (!props.active) {\n        button = (\n            <Button color=\"inherit\" size=\"large\" onClick={props.onClick}>\n                {props.children}\n            </Button>\n        )\n    }\n    return (\n        <div>\n            <Link to={props.to} style={{textDecoration: 'none', color: 'inherit'}}>\n                {button}\n            </Link>\n        </div>\n    );\n}\n\nexport default ButtonLink;\n","import axios from 'axios';\n\nexport default token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};","import {GET_ERRORS, REGISTER_SUCCESS, SET_CURRENT_USER} from \"../constants\";\nimport axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (userData) => dispatch => {\n    axios\n        .post('/api/users/register', userData)\n        .then(res => {\n            console.log(res.data);\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: 'successssssssssss'\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data,\n            });\n        });\n};\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post('/api/users/login', userData)\n        .then(res => {\n            console.log(res.data);\n\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded))\n\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data,\n            });\n        });\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded,\n    }\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};","import React, {Component} from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Star from '@material-ui/icons/Star';\nimport Badge from '@material-ui/core/Badge';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {TITLE} from \"../constants\";\nimport ButtonLink from \"./ButtonLink\";\n\nimport {connect} from \"react-redux\";\nimport {logoutUser} from \"../actions/authActions\";\nimport {withSnackbar} from \"notistack\";\n\nclass Navbar extends Component {\n    state = {\n        anchorEl: null,\n        currentTab: 'main'\n    };\n\n    handleProfile = event => {\n        this.setState({anchorEl: event.currentTarget})\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: null})\n    };\n\n    handleLogout = () => {\n        this.setState({anchorEl: null});\n        this.props.logoutUser();\n        this.props.enqueueSnackbar('Zostałeś wylogowany.', {variant: 'warning'})\n\n    };\n\n\n    activate = (tab) => {\n        this.setState({currentTab: tab})\n    };\n\n    render() {\n        const {anchorEl, currentTab} = this.state;\n        const isMenuOpen = Boolean(anchorEl);\n        const {isAuthenticated, user} = this.props.auth;\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n                transformOrigin={{vertical: 'top', horizontal: 'right'}}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleMenuClose}>Profil</MenuItem>\n                <MenuItem onClick={this.handleLogout}>Wyloguj</MenuItem>\n            </Menu>\n        );\n\n        const authLeftSide = (\n            <div>\n                <IconButton color=\"inherit\">\n                    <Badge badgeContent={0} color=\"secondary\">\n                        <Star/>\n                    </Badge>\n                </IconButton>\n                <IconButton color=\"inherit\" onClick={this.handleProfile}>\n                    <Badge badgeContent={0} color=\"secondary\">\n                        <AccountCircle/>\n                    </Badge>\n                </IconButton>\n            </div>\n        );\n        const guestLeftSide = (\n            <div>\n                <Toolbar>\n                    <ButtonLink\n                        to={\"/login\"}\n                        active\n                        onClick={() => null}\n                    >\n                        Zaloguj\n                    </ButtonLink>\n                    <ButtonLink\n                        to={\"/register\"}\n                        active={false}\n                        onClick={() => null}\n                    >\n                        Załóż konto\n                    </ButtonLink>\n                </Toolbar>\n            </div>\n        );\n\n        return (\n            <div>\n                <AppBar position=\"static\" color=\"primary\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\" style={{marginRight: '2em'}}>\n                            {TITLE}\n                        </Typography>\n                        <ButtonLink\n                            to={\"/app\"}\n                            active={currentTab === 'main'}\n                            onClick={() => this.activate(\"main\")}\n                        >\n                            Aukcje\n                        </ButtonLink>\n\n                        {isAuthenticated &&\n                        <ButtonLink\n                            to={\"/app/add\"}\n                            active={currentTab === 'add'}\n                            onClick={() => this.activate(\"add\")}\n                        >\n                            Dodaj gołębia\n                        </ButtonLink>\n                        }\n\n\n                        <div style={{flexGrow: '1'}}/>\n                        {isAuthenticated ? authLeftSide : guestLeftSide}\n                    </Toolbar>\n                </AppBar>\n                {renderMenu}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, {logoutUser})(withSnackbar(Navbar));","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport img from '../img/background.jpg';\n\nclass ListCard extends Component {\n    render() {\n        return (\n                <Card style={{maxWidth: '345'}}>\n                    <CardActionArea>\n                        <CardMedia style={{height: 180}}\n                            // className={classes.media}\n                            image={img}\n                            title=\"Contemplative Reptile\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Lizard\n                            </Typography>\n                            <Typography component=\"p\">\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                                across all continents except Antarctica\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                        <Button size=\"small\" color=\"primary\">\n                            Share\n                        </Button>\n                        <Button size=\"small\" color=\"primary\">\n                            Learn More\n                        </Button>\n                    </CardActions>\n                </Card>\n        );\n    }\n}\n\nexport default ListCard;","import React, {Component} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ListCard from \"./ListCard\";\n\n\nclass Main extends Component {\n    render() {\n        const gridItemStyle = {\n            padding: '1em'\n        };\n\n        return (\n            <div style={{flexGrow: '1'}}>\n                <Grid container spacing={0} style={{marginTop: '1em'}}>\n                    <Grid item xs={4} style={gridItemStyle}>\n                        <ListCard/>\n                    </Grid>\n\n                    <Grid item xs={4} style={gridItemStyle}>\n                        <ListCard/>\n                    </Grid>\n\n                    <Grid item xs={4} style={gridItemStyle}>\n                        <ListCard/>\n                    </Grid>\n\n                    <Grid item xs={4} style={gridItemStyle}>\n                        <ListCard/>\n                    </Grid>\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React, {Component} from 'react';\nimport {PRIMARY_COLOR, TITLE} from \"../constants\";\n\nclass Footer extends Component {\n    render() {\n        const styles = {\n            height: '3em',\n            backgroundColor: PRIMARY_COLOR,\n            color: 'white',\n            padding: '1em',\n            boxShadow: '0 -2px 8px 1px #888888',\n\n\n        };\n        return (\n            <div style={styles}>\n                &copy; {(new Date()).getFullYear()} {TITLE}.\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\n\nclass Auction extends Component {\n    render() {\n        return (\n            <div>\n                AUCTION! - {' '} {this.props.match.params.id}\n            </div>\n        );\n    }\n}\n\nexport default Auction;","import React, {Component} from 'react';\n\nclass AddAuction extends Component {\n    render() {\n        return (\n            <div>\n                ADDING AUCTION!\n            </div>\n        );\n    }\n}\n\nexport default AddAuction;","import React, {Component} from 'react';\n\nclass LastAuctions extends Component {\n    render() {\n        return (\n            <div>\n                Osttantnie aukcje xDDD\n            </div>\n        );\n    }\n}\n\nexport default LastAuctions;","import React, {Component} from 'react';\n\nclass Archive extends Component {\n    render() {\n        return (\n            <div>\n                Archiwuuuuum\n            </div>\n        );\n    }\n}\n\nexport default Archive;","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Lock from '@material-ui/icons/Lock';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonLink from \"./ButtonLink\";\nimport {loginUser} from \"../actions/authActions\";\n\nimport {\n    LOGIN_ELEMENT,\n    SECONDARY_COLOR\n} from \"../constants\";\n\nimport {connect} from \"react-redux\";\nimport {withSnackbar} from \"notistack\";\nimport {Redirect} from \"react-router-dom\";\n\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        errors: {},\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const user = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        // console.log(user);\n\n        this.props.loginUser(user);\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n        }\n    }\n\n    render() {\n        const {errors} = this.state;\n        const { isAuthenticated } = this.props.auth;\n\n        if (isAuthenticated) {\n            this.props.enqueueSnackbar('Zalogowano pomyślnie.', { variant: 'success' })\n        }\n        return (\n            <div>\n                {isAuthenticated && <Redirect to={\"/\"}/>}\n                <Card className={\"card\"}>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n                        <CardContent className={\"card-content\"}>\n                            <Avatar\n                                style={{\n                                    width: 60,\n                                    height: 60,\n                                    margin: '0 auto',\n                                    backgroundColor: SECONDARY_COLOR\n                                }}>\n                                <Lock/>\n                            </Avatar>\n                            <Typography\n                                variant=\"h4\"\n                                component=\"h2\"\n                                style={{\n                                    marginTop: '0.5em',\n                                    marginBottom: '1.4em'\n                                }}>\n                                {'Logowanie'}\n                            </Typography>\n                            <Grid container spacing={16}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id={\"email\"}\n                                        label={\"E-mail\"}\n                                        name={\"email\"}\n                                        onChange={this.handleChange('email')}\n                                        className={\"width-100\"}\n                                        value={this.state.email}\n                                        helperText={errors.email && errors.email}\n                                        error={errors.email && true}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id={\"password\"}\n                                        label={\"Hasło\"}\n                                        name={\"password\"}\n                                        onChange={this.handleChange('password')}\n                                        type=\"password\"\n                                        className={\"width-100\"}\n                                        value={this.state.password}\n                                        helperText={errors.password && errors.password}\n                                        error={errors.password && true}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                        <Divider/>\n                        <CardActions>\n                            <Button\n                                type={\"submit\"}\n                                variant={\"contained\"}\n                                color={\"primary\"}\n                                className={\"width-100\"}\n                            >\n                                {'Zaloguj'}\n                            </Button>\n                            <ButtonLink\n                                to={\"/app\"}\n                            >\n                                Wróć\n                            </ButtonLink>\n                        </CardActions>\n                    </form>\n                </Card>\n                {LOGIN_ELEMENT}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {loginUser})(withSnackbar(Login));","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Lock from '@material-ui/icons/Lock';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonLink from './ButtonLink';\n\nimport {Redirect} from \"react-router-dom\";\n\nimport {connect} from \"react-redux\";\nimport {registerUser} from \"../actions/authActions\";\n\nimport {\n    LOGIN_ELEMENT,\n    TITLE,\n    PRIMARY_COLOR,\n    SECONDARY_COLOR\n} from \"../constants\";\n\nimport axios from 'axios';\nimport {withSnackbar} from \"notistack\";\n\nclass Register extends Component {\n    state = {\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n        errors: {},\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const user = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n\n        // console.log(user);\n\n\n        this.props.registerUser(user);\n\n\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n        }\n        if (nextProps.auth) {\n            if (nextProps.auth.registerSuccess) {\n                this.setState({registerSuccess: true})\n            }\n        }\n    }\n\n    render() {\n        const {errors, registerSuccess} = this.state;\n        const {isAuthenticated} = this.props.auth;\n        if (registerSuccess) {\n            this.props.enqueueSnackbar('Konto utworzone pomyślnie. Możesz się teraz zalogować.', {variant: 'success'})\n        } else if (isAuthenticated) {\n            this.props.enqueueSnackbar('Masz już konto.', {variant: 'error'})\n        }\n        return (\n            <div>\n                {registerSuccess || isAuthenticated && <Redirect to={\"/\"}/>}\n                <Card className={\"card\"}>\n                    <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n                        <CardContent className={\"card-content\"}>\n                            <Avatar\n                                style={{\n                                    width: 60,\n                                    height: 60,\n                                    margin: '0 auto',\n                                    backgroundColor: SECONDARY_COLOR\n                                }}>\n                                <Lock/>\n                            </Avatar>\n                            <Typography\n                                variant=\"h4\"\n                                component=\"h2\"\n                                style={{\n                                    marginTop: '0.5em',\n                                    marginBottom: '1.4em'\n                                }}>\n                                {'Rejestracja'}\n                            </Typography>\n                            <Grid container spacing={16}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id={\"name\"}\n                                        label={\"Nazwa użytkownika\"}\n                                        name={\"name\"}\n                                        onChange={this.handleChange('name')}\n                                        className={\"width-100\"}\n                                        value={this.state.name}\n                                        helperText={errors.name && errors.name}\n                                        error={errors.name && true}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id={\"email\"}\n                                        label={\"E-mail\"}\n                                        name={\"email\"}\n                                        onChange={this.handleChange('email')}\n                                        className={\"width-100\"}\n                                        value={this.state.email}\n                                        helperText={errors.email && errors.email}\n                                        error={errors.email && true}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id={\"password\"}\n                                        label={\"Hasło\"}\n                                        name={\"password\"}\n                                        onChange={this.handleChange('password')}\n                                        type=\"password\"\n                                        className={\"width-100\"}\n                                        value={this.state.password}\n                                        helperText={errors.password && errors.password}\n                                        error={errors.password && true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id={\"password2\"}\n                                        label={\"Powtórz hasło\"}\n                                        name={\"password2\"}\n                                        onChange={this.handleChange('password2')}\n                                        type=\"password\"\n                                        className={\"width-100\"}\n                                        value={this.state.password2}\n                                        helperText={errors.password2 && errors.password2}\n                                        error={errors.password2 && true}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                        <Divider/>\n                        <CardActions>\n                            <Button\n                                type={\"submit\"}\n                                variant={\"contained\"}\n                                color={\"primary\"}\n                                className={\"width-100\"}\n                            >\n                                {'Utwórz konto'}\n                            </Button>\n\n                            <ButtonLink\n                                to={\"/app\"}\n                            >\n                                Wróć\n                            </ButtonLink>\n\n                        </CardActions>\n                    </form>\n                </Card>\n\n                {LOGIN_ELEMENT}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {registerUser})(withSnackbar(Register));","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Main from './components/Main';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Footer from \"./components/Footer\";\n\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\n\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport primary from '@material-ui/core/colors/deepPurple';\nimport secondary from '@material-ui/core/colors/orange';\nimport Auction from \"./components/Auction\";\nimport AddAuction from \"./components/AddAuction\";\nimport LastAuctions from \"./components/LastAuctions\";\nimport Archive from \"./components/Archive\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: primary,\n        secondary: secondary,\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nclass App extends Component {\n    render() {\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    <MuiThemeProvider theme={theme}>\n                        <Switch>\n                            <Redirect exact from={\"/\"} to={\"/app\"}/>\n                        </Switch>\n                        <Route path={\"/app/\"} component={Navbar}/>\n                        <main style={{flex: 1}}>\n                            <Route exact path={\"/app\"} component={Main}/>\n                            <Route exact path={\"/app/add\"} component={AddAuction}/>\n                            <Route exact path={\"/app/last\"} component={LastAuctions}/>\n                            <Route exact path={\"/app/archive\"} component={Archive}/>\n                            <Route exact path={\"/app/auction/:id\"} component={Auction}/>\n\n                            <Route exact path={\"/register\"} component={Register} />\n                            <Route exact path={\"/login\"} component={Login}/>\n                        </main>\n                        <footer>\n                            <Route path={\"/app\"} component={Footer}/>\n                        </footer>\n\n                        <CssBaseline/>\n                    </MuiThemeProvider>\n                </div>\n            </Router>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const isEmpty = value =>\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;","import {REGISTER_SUCCESS, SET_CURRENT_USER} from \"../constants\";\nimport isEmpty from \"../utils/isEmpty\";\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REGISTER_SUCCESS:\n            return {...state, registerSuccess: true};\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        default:\n            return state;\n    }\n}","import {GET_ERRORS} from \"../constants\";\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n})","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {SnackbarProvider} from 'notistack';\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport jwt_decode from 'jwt-decode';\nimport {setCurrentUser, logoutUser} from \"./actions/authActions\";\n\nif (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decoded = jwt_decode(localStorage.jwtToken);\n    store.dispatch(setCurrentUser(decoded));\n\n    if (decoded.exp < (Date.now()/1000)) {\n        store.dispatch(logoutUser());\n        window.location.href = '/login'\n    }\n}\n\nconst app = (\n    <Provider store={store}>\n        <SnackbarProvider\n            maxSnack={3}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        >\n            <App/>\n        </SnackbarProvider>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}